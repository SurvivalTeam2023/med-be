name: CD
on:
  push:
    branches:
      - deployment
jobs:
  Remove-Antifact:
    name: Remove artifact
    runs-on: ubuntu-latest
    steps:
      - name: Clear useless artifacts
        uses: c-hive/gha-remove-artifacts@v1.2.0
        with:
          age: '1 days'

  Build-Deploy:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [16]
    env:
      NODE_ENV: "development"
    name: Build and Deploy
    steps:  
      - name: Checkout üõé
        uses: actions/checkout@v3

      - name: Setup Node üèó
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
         node-version: ${{ matrix.node }}
         cache: 'yarn'

      - name: install dependency
        run: yarn

      - name: lint check 
        run: yarn lint

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public

      - name: Get timestamp
        uses: gerred/actions/current-time@master
        id: current-time

      - name: Run string replace
        uses: frabert/replace-string-action@master
        id: format-time
        with:
          pattern: '[:\.]+'
          string: "${{ steps.current-time.outputs.time }}"
          replace-with: '-'
          flags: 'g'

      - name: Executing remote ssh EC2
        uses: appleboy/ssh-action@master
        env: 
          REGISTRY: ${{ secrets.REGISTRY }}
          REGISTRY_ALIAS: ${{ secrets.REGISTRY_ALIAS }}
          REPOSITORY: ${{ secrets.REPOSITORY }}
          IMAGE_TAG: "banhsbao-${{ steps.format-time.outputs.replaced }}"
          EKS_DEPLOYMENT: ${{ secrets.EKS_DEPLOYMENT }}
          APP_NAME: ${{ secrets.APP_NAME }}
        with:
          host: ${{ secrets.HOST_EC2 }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            kubectl set image deployment/med-be med-be=public.ecr.aws/s5b2k5y9/med-app:banhsbao-2022-12-13T11-04-31-446Z
          
      - name: say Oye
        run: echo Done ola :3   

